1.Delegate "Action" - это общий тип делегата (как генерик), кот подходит для всех делегатов типа VOID и к-во принимаемых ими
  параметров от 0 до 10:
	1) Action - говорит, что тип принимаемой делегатом ф-ции он VOID и эта ф-ция НЕ ПРИНИМАЕТ параметров;
	2) ACTION <int, float ... до 10 параметров> - говорит,что тип принимаемой делегатом ф-ции он VOID и эта ф-ция  ПРИНИМАЕТ 
		то к-во и тип параметров, кот указано в угольных скобках;
	3) используя делегат ACTION нет нужды определять делегат как переменную т.е не надо писать:

		public delegate void Function_void_with_int_parameter(int num) --> определяет как переменную
		public void Executor (Function_void_with_int_parameter n,int x)
        {
            n(x);
        },
		
		а просто :

		public void Executor(Action<int> n, int x)
        {
            n(x);
        }

	4) ACTION - это делегат, кот не может принимать ф-ции которые возваращают значение.

	Для это цели существует другой тип делегата типа генерик который называется FUNC

1.Delegate "FUNC" - это общий тип делегата (как генерик), кот подходит для всех делегатов возвращающих какое-либо значение и 
  к-во принимаемых имипараметров от 0 до 10:
	1) FUNC< только один параметр> - говорит, что функция,принимаемая делегатом,  НЕ ПРИНИМАЕТ параметров и возвращает значение, тип
		которого указан в угольных скобках;
	2) FUNC <int p1, float,string[] ... int => это тип возвращаемый ф-цией (до 10 параметров)> - говорит,что тип принимаемой делегатом 
		функции - это тип который указан в угольных скобках последним => последний тип - это не тип параметра принимаемого последним 
		данной функцией, а тип, который  возвращается данной фукцией . В выше приведёном примере тип 
		возвращаемый фукцией он INT так как именно этот тип указан последним;
	3) используя делегат FUNC нет нужды определять делегат как переменную (подобно делегату ACTION.Смотреть выше)